{"ast":null,"code":"var _jsxFileName = \"/Users/aschnall/Documents/Portfolio/quotes/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport quotes from './quotes';\nconst backgroundColors = ['red', 'blue', 'pink', 'green', 'purple', 'yellow', 'orange'];\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      quote: quotes[Math.floor(Math.random() * quotes.length)].quote,\n      author: quotes[Math.floor(Math.random() * quotes.length)].author\n    };\n\n    this.quoteGenerator = () => {\n      document.body.style.backgroundColor = backgroundColors[Math.floor(Math.random() * backgroundColors.length)];\n      this.setState({\n        quote: quotes[Math.floor(Math.random() * quotes.length)].quote,\n        author: quotes[Math.floor(Math.random() * quotes.length)].author\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"q\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }\n    }, this.state.quote), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, \"test\"))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.quoteGenerator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }\n    }, \"Get New Quote\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 17\n  }\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/aschnall/Documents/Portfolio/quotes/src/index.js"],"names":["React","ReactDOM","quotes","backgroundColors","App","Component","state","quote","Math","floor","random","length","author","quoteGenerator","document","body","style","backgroundColor","setState","render","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,gBAAgB,GAAG,CAAC,KAAD,EAAO,MAAP,EAAc,MAAd,EAAqB,OAArB,EAA6B,QAA7B,EAAsC,QAAtC,EAA+C,QAA/C,CAAzB;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACPC,MAAAA,KAAK,EAAEL,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcR,MAAM,CAACS,MAAhC,CAAD,CAAN,CAAgDJ,KADhD;AAEPK,MAAAA,MAAM,EAAEV,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcR,MAAM,CAACS,MAAhC,CAAD,CAAN,CAAgDC;AAFjD,KADyB;;AAAA,SAMjCC,cANiC,GAMhB,MAAM;AACtBC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsCd,gBAAgB,CAACK,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,MAAL,KAAcP,gBAAgB,CAACQ,MAA3C,CAAD,CAAtD;AACA,WAAKO,QAAL,CACC;AAAEX,QAAAA,KAAK,EAAEL,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcR,MAAM,CAACS,MAAhC,CAAD,CAAN,CAAgDJ,KAAzD;AACCK,QAAAA,MAAM,EAAEV,MAAM,CAACM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAcR,MAAM,CAACS,MAAhC,CAAD,CAAN,CAAgDC;AADzD,OADD;AAKA,KAbgC;AAAA;;AAejCO,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKb,KAAL,CAAWC,KAAf,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,CAFD,CADD,eAOC;AAAQ,MAAA,OAAO,EAAE,KAAKM,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPD,CADD;AAWA;;AA3BgC;;AAgClCZ,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBL,QAAQ,CAACM,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport quotes from './quotes';\n\nconst backgroundColors = ['red','blue','pink','green','purple','yellow','orange'];\t\n\nclass App extends React.Component {\n\tstate = { \n\t\tquote: quotes[Math.floor(Math.random()*quotes.length)].quote,\n\t\tauthor: quotes[Math.floor(Math.random()*quotes.length)].author\n\t}\n\n\tquoteGenerator = () => {\n\t\tdocument.body.style.backgroundColor = backgroundColors[Math.floor((Math.random()*backgroundColors.length))];\n\t\tthis.setState(\n\t\t\t{ quote: quotes[Math.floor(Math.random()*quotes.length)].quote,\n\t\t\t\tauthor: quotes[Math.floor(Math.random()*quotes.length)].author\n\t\t\t}\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<q>{this.state.quote}</q>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h5>test</h5>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={this.quoteGenerator}>Get New Quote</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}